# Generated by Django 2.2 on 2020-09-24 10:21

import core.models.lesson
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(max_length=50, unique=True, verbose_name='メールアドレス')),
                ('is_active', models.BooleanField(default=True, verbose_name='ログイン権限')),
                ('is_staff', models.BooleanField(default=False, verbose_name='管理者権限')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100, verbose_name='タイトル')),
                ('detail', models.TextField(verbose_name='詳細')),
                ('image', models.ImageField(blank=True, null=True, upload_to=core.models.lesson.get_upload_path, verbose_name='イメージ画像')),
                ('application_limit', models.IntegerField(default=0, verbose_name='申込者数上限')),
                ('required_ticket', models.IntegerField(default=0, verbose_name='必要チケット枚数')),
                ('zoom_url', models.CharField(max_length=100, verbose_name='ZoomのURL')),
                ('start_at', models.DateTimeField(verbose_name='開始日時')),
                ('end_at', models.DateTimeField(verbose_name='終了日時')),
                ('public_flg', models.IntegerField(choices=[(0, False), (1, True)], default=0, verbose_name='公開フラグ')),
                ('delete_flg', models.IntegerField(choices=[(0, False), (1, True)], default=0, verbose_name='削除フラグ')),
            ],
            options={
                'db_table': 'lessons',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('last_name', models.CharField(max_length=30, verbose_name='姓')),
                ('first_name', models.CharField(max_length=30, verbose_name='名')),
                ('gender', models.IntegerField(choices=[(0, '未回答'), (1, '男性'), (2, '女性'), (3, 'その他')], default=0, verbose_name='性別')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='誕生日')),
                ('phone_number', models.IntegerField(blank=True, null=True, verbose_name='電話番号')),
                ('ticket', models.IntegerField(default=0, verbose_name='所持チケット')),
            ],
            options={
                'db_table': 'students',
            },
            bases=('core.user',),
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('last_name', models.CharField(max_length=30, verbose_name='姓')),
                ('first_name', models.CharField(max_length=30, verbose_name='名')),
                ('phone_number', models.IntegerField(verbose_name='電話番号')),
                ('gender', models.IntegerField(choices=[(0, '未回答'), (1, '男性'), (2, '女性'), (3, 'その他')], default=0, verbose_name='性別')),
                ('birthday', models.DateField(verbose_name='誕生日')),
                ('prefecture', models.CharField(max_length=5, verbose_name='都道府県')),
                ('city', models.CharField(max_length=100, verbose_name='市区町村')),
                ('address', models.CharField(max_length=100, verbose_name='番地以降')),
                ('auth_flg', models.IntegerField(choices=[(0, False), (1, True)], default=0, verbose_name='認証フラグ')),
            ],
            options={
                'db_table': 'teachers',
            },
            bases=('core.user',),
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Lesson')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Student')),
            ],
            options={
                'db_table': 'favorites',
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Lesson')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Student')),
            ],
            options={
                'db_table': 'applications',
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='applicants',
            field=models.ManyToManyField(related_name='applied_students', through='core.Application', to='core.Student'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='liked_students',
            field=models.ManyToManyField(related_name='liked_students', through='core.Favorite', to='core.Student'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Teacher'),
        ),
    ]
